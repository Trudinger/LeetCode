LeetCode No. 279 Perfect Squares

This problem can be solved with several methods. The solution below is a dynamic programming approach.
For each number n, we consider the sub-problem to write n-i^2 (0 <= i <= sqrt(n)) as sum of perfect squares.

Remark: some classical theorems in number theorem can provide an O(sqrt(n)) approach.

class Solution {
public:
    int numSquares(int n) {
        vector<int> PS;
        for(int index = 0; index <= n; ++index)
        {
            PS.push_back(index); // consider an obvious solution of writing n as n squares of 1
        }
        int i = 2, j = 0;
        for(i = 2; i <= n; ++i)
        {
            int temp = -1;
            int root = (int)sqrt(i);
            for(j = 1; j <= root; ++j)
            {
                if(PS[i - j*j] + 1 < PS[i])
                {
                    PS[i] = PS[i - j*j] + 1;
                }
            }
        }
        return PS[n];
    }
};
