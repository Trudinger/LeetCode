LeetCode No. 2 Add Two Numbers

Simple math formula. Be careful about the manipulation of pointers.

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int carry = 0;
        ListNode* head = new ListNode((l1->val + l2->val + carry)%10);
        ListNode* tail = head;
        if((l1->val + l2->val) >= 10){carry = 1;}
        l1 = l1->next; l2 = l2->next;
        while(l1!=NULL && l2!=NULL){
            if((l1->val + l2->val + carry) >= 10){
                ListNode* next = new ListNode((l1->val + l2->val + carry)%10);
                tail->next = next;
                tail = next;
                carry = 1;
                l1 = l1->next; l2 = l2->next;
            }   
            else{
                ListNode* next = new ListNode(l1->val + l2->val + carry);
                tail->next = next;
                tail = next;
                carry = 0;
                l1 = l1->next; l2 = l2->next;
            }
        }
        while(l1!=NULL){
            if((l1->val + carry) >= 10){
                ListNode* next = new ListNode((l1->val + carry)%10);
                tail->next = next;
                tail = next;
                carry = 1;
                l1 = l1->next;
            }   
            else{
                ListNode* next = new ListNode(l1->val + carry);
                tail->next = next;
                tail = next;
                carry = 0;
                l1 = l1->next;
            }
        }
        while(l2!=NULL){
            if((l2->val + carry) >= 10){
                ListNode* next = new ListNode((l2->val + carry)%10);
                tail->next = next;
                tail = next;
                carry = 1;
                l2 = l2->next;
            }   
            else{
                ListNode* next = new ListNode(l2->val + carry);
                tail->next = next;
                tail = next;
                carry = 0;
                l2 = l2->next;
            }
        }
        if(carry == 1){
                ListNode* next = new ListNode(1);
                tail->next = next;
                tail = next;
        }
        return head;
    }
};
