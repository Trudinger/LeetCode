LeetCode No. 88 Merge Sorted Array

This problem can be solved by directly merging and sorting. However,  a two pointers method is more efficient.

class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        vector<int> nums1_copy;
        int i = 0, j = 0, k = 0;
        for(i = 0; i < m; ++i)
        {
            nums1_copy.push_back(nums1[i]);
        }
        int p1 = 0, p2 = 0;
        int p = 0;
        while((p1<m)&&(p2<n))
        {
            if(nums1_copy[p1] <= nums2[p2]){
                nums1[p++] = nums1_copy[p1];
                p1++;
            }
            else{
                nums1[p++] = nums2[p2];
                p2++;
            }
        }
        if(p1 < m){
            for(j = n + p1; j < m + n; ++j)
            {
                nums1[j] = nums1_copy[j-n];
            }
        }
        if(p2 < n){
            for(k = m + p2; k < m + n; ++k)
            {
                nums1[k] = nums2[k-m];
            }
        }
        
    }
};
