LeetCode No. 278 First Bad Version

This is a typical problem of binary search.

// The API isBadVersion is defined for you.
// bool isBadVersion(int version);

class Solution {
public:
    int firstBadVersion(int n) {
        int left = 1, right = n;
        int pivot;
        while(left <= right)
        {
            pivot = left + (right - left)/2; // avoid overfolw
            if(isBadVersion(pivot)==false){
                left = pivot + 1; 
            }
            else{
                right = pivot - 1;
            }
        }
        return left;
    }
};
